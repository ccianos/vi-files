# Date: Mon, 7 Oct 91 17:38:32 -0400
# From: vogel@c17igpb.wpafb.af.mil (Contr Karl Vogel)
# Return-Path: <vogel@c17igpb.wpafb.af.mil>
# To: rubenro@viggo.blh.no
# Subject: More VI goodies
# Status: OR
# 
# 
#	This is a shell archive.  Remove anything before this line,
#	then unpack it by saving it in a file and typing "sh file".
#
#	Typing "sh file -c" will overwrite existing files.
#
#	Sent by:	vogel
#	From:		c17igpb
#	Date:		Mon Oct  7 17:36:58 1991
#
#	Contents:
#
#	mkrcsh.c shvi tst.mkrcsh 
#
# ----------------------------------------------------------------------------
#
#	If you want to change ownership of each input file to the
#	sender's userid, set CHOWN and CHGRP appropriately.

#CHOWN=/etc/chown
CHOWN=:
#CHGRP=/bin/chgrp
CHGRP=:

# ----------------------------------------------------------------------------

if test -f 'mkrcsh.c' -a "${1}" != "-c"; then
   echo x - will not overwrite existing file "'mkrcsh.c'"
else
sed 's/^@//' > 'mkrcsh.c' << '@ENDFILE-file1-ENDFILE'
#ifndef	lint
static char    *mkrcsh_c_rcsid =
"$Id: mkrcsh.c,v 1.8 1991/08/16 17:43:51 vogel Exp $";

static char    *mkrcsh_c_source =
"$Source: /d/cdc/vogel/util/RCS/mkrcsh.c,v $";

#endif

/*
 *	mkrcsh:		accepts a filename, and creates a string containing
 *			RCS header information for the file:
 *
 *				#ifndef lint
 *				static	char	*	name_x_rcsid =
 *					"$ Id$";
 *
 *				static	char	*	name_x_source =
 *					"$ Source$";
 *				#endif
 *
 *			is created, where "name" is the name of the source
 *			file, and "x" is the extension.
 *
 *			A function value of 0 is returned if everything is
 *			OK, 1 otherwise.
 *
 *		****	THERE IS ALSO A MAIN PROGRAM BY THIS NAME!  The binary
 *			has the name "mkrcsh", and the source is "tst.mkrcsh".
 *
 *		Usage:	int mkrcsh (file, header)
 *			char * file;
 *			char * header;
 *
 *		Where:	"file"	 is the file name.
 *			"header" holds the desired header string.
 *
 *		Ex:	mkrcsh ("remark.c", string) stores
 *
 *			#ifndef lint
 *			static	char	*	remark_c_rcsid =
 *				"$ Id$";
 *
 *			static	char	*	remark_c_source =
 *				"$ Source$";
 *			#endif
 *
 *			in the array "string".  Actually, there is no space
 *			between "$" and "I" in the array - it was put there
 *			to prevent RCS expansion when THIS file is checked in.
 */

#include	<stdio.h>
#include	<strings.h>
#include	<sys/param.h>

int 
mkrcsh (file, header)
char           *file;
char           *header;
{

/*
 *	Variables.
 */

	char           *slash;
	char           *t;

	char            temp[MAXPATHLEN];

/*
 *	Check arguments.  If either one is NULL, return with status 1.
 */

	if (file == (char *) NULL || header == (char *) NULL)
	{
		fprintf (stderr, "mkrcsh:  one of the arguments is null\n");
		return (1);
	}

/*
 *	Use only the basename for the variable name.  Make sure that any
 *	special characters are turned into underscores.
 */

	if (slash = rindex (file, '/'))
		*slash++ = '\0';
	else
		slash = file;

	(void) strcpy (temp, slash);

	for (t = temp; *t; ++t)
		if (index ("@$-+;:=.,", *t))
			*t = '_';

/*
 *	Write the header string.
 */

	(void) strcpy (header, "#ifndef\tlint\nstatic\tchar\t*\t");
	(void) strcat (header, temp);
	(void) strcat (header, "_rcsid\t=\n\t\"$I");
	(void) strcat (header, "d$\";\n\n");

	(void) strcat (header, "static\tchar\t*\t");
	(void) strcat (header, temp);
	(void) strcat (header, "_source\t=\n\t\"$Sour");
	(void) strcat (header, "ce$\";\n#endif\n\n");

	return (0);
}
@ENDFILE-file1-ENDFILE

$CHOWN vogel 'mkrcsh.c'
$CHGRP cdc 'mkrcsh.c'
chmod 644 'mkrcsh.c'

SIZE=`wc -c < 'mkrcsh.c'`; SIZE=`echo $SIZE`
case $SIZE in
	2448)	echo x - file mkrcsh.c ;;
	*)	echo x - file mkrcsh.c [POSSIBLY CORRUPT] ;;
esac
fi

# ----------------------------------------------------------------------------

if test -f 'shvi' -a "${1}" != "-c"; then
   echo x - will not overwrite existing file "'shvi'"
else
sed 's/^@//' > 'shvi' << '@ENDFILE-file2-ENDFILE'
#!/bin/sh
#
# $Id: shvi,v 1.3 1991/10/07 21:25:51 vogel Exp $
#
# NAME:
#	shvi
#
# SYNOPSIS:
#	shvi [VI options] [file ...]
#
# DESCRIPTION:
#	"shvi" is a collection of macros to assist in shell programming
#	with VI.  The following VI settings are used:
#
#		set autowrite
#		set autoindent
#		set edcompatible
#		set noremap
#		set redraw
#		set timeout
#		set wm=2
#		set writeany
#		set shell=/bin/sh
#
#	The following keys are mapped in command mode:
#
#		` (grave)		delete to end of line
#		; (semicolon)		indent one tab space right
#		= (equals)		indent one tab space left
#		, (comma)		turns line numbering off
#		. (period)		turns line numbering on
#		[ (left bracket)	start new comment
#		g			suspend
#		V			comments out the current line
#		K			undoes use of V key
#		q			puts current line in center of screen
#
#		E			read a file containing a scan-line
#					which looks like this:
#
#	T	T	T	T	T	T	T	T
#|...*....1....*....2....*....3....*....4....*....5....*....6....*....7....*
#
#	The following key sequences are mapped in insert mode:
#
#		''	adds carriage-return and starts new comment line
#		['	starts entirely new comment block
#		br'	adds break statement
#		ca'	adds case...esac block
#		co'	adds continue statement
#		ei'	adds elif...then block
#		el'	adds else block
#		fo'	adds for; do ... done block
#		if'	adds if; then ... fi block
#		re'	adds return statement
#		wh'	adds while; do ... done block
#
#		sh'	begins a new shell script by reading in a template
#			and replacing the word "template" with the basename
#			of the current file
#
# OPTIONS:
#	Any legitimate VI arguments.
#
# AUTHOR:
#	Karl Vogel
# 
# BUGS:
#	None noticed yet.
#
# HISTORY:
#	$Log: shvi,v $
# Revision 1.3  1991/10/07  21:25:51  vogel
# 1.  Reformatted comments.
# 2.  Added set redraw command.
#
#

BASE=`basename $1`
 
EXINIT="set autowrite\
| set autoindent\
| set edcompatible\
| set noremap\
| set redraw\
| set timeout\
| set wm=2\
| set writeany\
| set shell=/bin/sh\
| map \`    D\
| map ;     >>\
| map =     <<\
| map ,     :set nonumber\
| map .     :set number\
| map [     oi##	#kkA\
| map g     \
| map E     :r /d/cdc/vogel/etc/help/vi.scan\
| map V     I#	\
| map K     ^xx\
| map q     z.\
| map! ''   o#	\
| map! ['   i##	#kA\
| map! br'  break\
| map! ca'  case inesackkA\
| map! co'  continue\
| map! ei'  elif thenk:.,+1<kA\
| map! el'  else<<o	\
| map! fo'  for dodonekkA\
| map! if'  if thenfikkA\
| map! re'  return\
| map! sh'  :r!sed -e s/template/$BASE/g /d/cdc/vogel/sh/template:1dd\
| map! wh'  while dodonekkA\
"

PS1="(sh-vi) "
export EXINIT PS1
exec /usr/ucb/vi $*
@ENDFILE-file2-ENDFILE

$CHOWN vogel 'shvi'
$CHGRP cdc 'shvi'
chmod 755 'shvi'

SIZE=`wc -c < 'shvi'`; SIZE=`echo $SIZE`
case $SIZE in
	2634)	echo x - file shvi ;;
	*)	echo x - file shvi [POSSIBLY CORRUPT] ;;
esac
fi

# ----------------------------------------------------------------------------

if test -f 'tst.mkrcsh' -a "${1}" != "-c"; then
   echo x - will not overwrite existing file "'tst.mkrcsh'"
else
sed 's/^@//' > 'tst.mkrcsh' << '@ENDFILE-file3-ENDFILE'
#ifndef	lint
static char    *tst_mkrcsh_rcsid =
"$Id: tst.mkrcsh,v 1.2 1991/08/16 17:47:14 vogel Exp $";

static char    *tst_mkrcsh_source =
"$Source: /d/cdc/vogel/tst/util/RCS/tst.mkrcsh,v $";

#endif

/*
 *	tst:		tests "mkrcsh" function, also serves as the "mkrcsh"
 *			main program.
 *
 *		Usage:	tst [file ...]
 *			mkrcsh [file ...]
 *
 *		Where:	"file"	is any file for which an RCS header is
 *				desired.  The output header is written to
 *				stdout.
 *
 *				If no files are entered on the command line,
 *				stdin is read.
 */

#include	<stdio.h>
#include	<strings.h>
#include	<sys/param.h>

main (argc, argv)
int             argc;
char          **argv;
{

/*
 *	Variables.
 */

	char           *newline;
	char            header[MAXPATHLEN];
	char            path[MAXPATHLEN];

	int             k;

/*
 *	Read the command line or stdin.
 */

	if (argc == 1)
	{
		while (fgets (path, MAXPATHLEN, stdin))
		{
			if (newline = index (path, '\n'))
				*newline = '\0';

			mkrcsh (path, header);
			puts (header);
		}
	}
	else
	{
		for (k = 1; k < argc; ++k)
		{
			mkrcsh (argv[k], header);
			puts (header);
		}
	}

	exit (0);
}
@ENDFILE-file3-ENDFILE

$CHOWN vogel 'tst.mkrcsh'
$CHGRP cdc 'tst.mkrcsh'
chmod 644 'tst.mkrcsh'

SIZE=`wc -c < 'tst.mkrcsh'`; SIZE=`echo $SIZE`
case $SIZE in
	1141)	echo x - file tst.mkrcsh ;;
	*)	echo x - file tst.mkrcsh [POSSIBLY CORRUPT] ;;
esac
fi

# ----------------------------------------------------------------------------

exit 0
exit 0  # Just in case...

